// ================================================================
//
// This software was developed by employees of the National Institute of
// Standards and Technology (NIST), an agency of the Federal Government.
// Pursuant to title 17 United States Code Section 105, works of NIST employees
// are not subject to copyright protection in the United States and are
// considered to be in the public domain. Permission to freely use, copy,
// modify, and distribute this software and its documentation without fee is
// hereby granted, provided that this notice and disclaimer of warranty appears
// in all copies.
//
// THE SOFTWARE IS PROVIDED 'AS IS' WITHOUT ANY WARRANTY OF ANY KIND, EITHER
// EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, ANY
// WARRANTY THAT THE SOFTWARE WILL CONFORM TO SPECIFICATIONS, ANY IMPLIED
// WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE, AND FREEDOM
// FROM INFRINGEMENT, AND ANY WARRANTY THAT THE DOCUMENTATION WILL CONFORM TO
// THE SOFTWARE, OR ANY WARRANTY THAT THE SOFTWARE WILL BE ERROR FREE. IN NO
// EVENT SHALL NIST BE LIABLE FOR ANY DAMAGES, INCLUDING, BUT NOT LIMITED TO,
// DIRECT, INDIRECT, SPECIAL OR CONSEQUENTIAL DAMAGES, ARISING OUT OF,
// RESULTING FROM, OR IN ANY WAY CONNECTED WITH THIS SOFTWARE, WHETHER OR NOT
// BASED UPON WARRANTY, CONTRACT, TORT, OR OTHERWISE, WHETHER OR NOT INJURY WAS
// SUSTAINED BY PERSONS OR PROPERTY OR OTHERWISE, AND WHETHER OR NOT LOSS WAS
// SUSTAINED FROM, OR AROSE OUT OF THE RESULTS OF, OR USE OF, THE SOFTWARE OR
// SERVICES PROVIDED HEREUNDER.
//
// Distributions of NIST software should also include copyright and licensing
// statements of any third-party software that are legally bundled with the
// code in compliance with the conditions of those licenses.
// 
// ================================================================

// ================================================================
// 
// Authors: Derek Juba <derek.juba@nist.gov>
// Created: 2019-08-02
//
// ================================================================

// Generated by Flexc++ V2.06.02 on Fri, 02 Aug 2019 15:39:01 -0400

#ifndef map_parserMapScanner_H_INCLUDED_
#define map_parserMapScanner_H_INCLUDED_

// $insert baseclass_h
#include "MapScannerbase.h"

// $insert namespace-open
namespace map_parser
{

// $insert classHead
class MapScanner: public MapScannerBase
{
    public:
        explicit MapScanner(std::istream &in = std::cin,
                                std::ostream &out = std::cout);

        MapScanner(std::string const &infile, std::string const &outfile);
        
        // $insert lexFunctionDecl
        int lex();

    private:
        int lex__();
        int executeAction__(size_t ruleNr);

        void print();
        void preCode();     // re-implement this function for code that must 
                            // be exec'ed before the patternmatching starts

        void postCode(PostEnum__ type);    
                            // re-implement this function for code that must 
                            // be exec'ed after the rules's actions.
};

// $insert scannerConstructors
inline MapScanner::MapScanner(std::istream &in, std::ostream &out)
:
    MapScannerBase(in, out)
{}

inline MapScanner::MapScanner(std::string const &infile, std::string const &outfile)
:
    MapScannerBase(infile, outfile)
{}

// $insert inlineLexFunction
inline int MapScanner::lex()
{
    return lex__();
}

inline void MapScanner::preCode() 
{
    // optionally replace by your own code
}

inline void MapScanner::postCode(PostEnum__ type) 
{
    // optionally replace by your own code
}

inline void MapScanner::print() 
{
    print__();
}

// $insert namespace-close
}

#endif // MapScanner_H_INCLUDED_

